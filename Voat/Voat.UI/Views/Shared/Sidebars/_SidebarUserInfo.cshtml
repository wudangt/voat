@*This source file is subject to version 3 of the GPL license,
    that is bundled with this package in the file LICENSE, and is
    available online at http://www.gnu.org/licenses/gpl.txt;
    you may not use this file except in compliance with the License.

    Software distributed under the License is distributed on an "AS IS" basis,
    WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
    the specific language governing rights and limitations under the License.

    All portions of the code written by Voat are Copyright (c) 2014 Voat
    All Rights Reserved.*@

@{
    string userName = ViewBag.userid;
    DateTime userRegistrationDateTime = UserHelper.GetUserRegistrationDateTime(ViewBag.userid);

    <style>
        .titlebox {
            width: 251px;
        }
    </style>

    <div class="side">
        <div class="titlebox footer rounded">
            <div class="thumbnail may-blank user-avatar">
                @if (UserHelper.HasAvatar(userName) != null)
                {
                    if (Settings.UseContentDeliveryNetwork)
                    {
                        <img src="https://cdn.voat.co/avatars/@(userName).jpg" alt="" class="user-avatar">
                    }
                    else
                    {
                        <img src="~/Storage/Avatars/@(userName).jpg" alt="" class="user-avatar">
                    }
                }
                else
                {
                    <img src="~/Graphics/thumb-placeholder.png" alt="" class="user-avatar">
                }
            </div>
            &ldquo;
            <span class="user-quote">
                @UserHelper.UserShortbio(userName)
            </span>
            &rdquo;
        </div>
        <div class="bottom">
            <p class="h6">
                Member for: <b>@Submissions.CalcSubmissionAge(userRegistrationDateTime)</b><br />
                <span class="bottommenu">(joined on: @UserHelper.GetUserRegistrationDateTime(userName).ToShortDateString())</span>
            </p>
            <a href="#" class="btn-whoaverse-paging disabled">
                Follow
            </a>
            <a href="#" class="btn-whoaverse-paging disabled">
                Block
            </a>
            <a href="#" class="btn-whoaverse-paging disabled">
                Report
            </a>
            <a href="/messaging/compose?recipient=@userName" class="btn-whoaverse-paging">
                Send a message
            </a>
        </div>
        <div class="titlebox footer rounded">
            <h2 class="hover whoaversename">
                Contribution points
            </h2>
            <div class="bottom">
                <p class="h6">
                    Submission Contribution Points: <b>@Karma.LinkKarma(userName)</b>
                </p>
                <p class="h6">
                    Comment Contribution Points: <b>@Karma.CommentKarma(userName)</b>
                </p>
            </div>
            <div class="titlebox footer rounded">
                <h2 class="hover whoaversename">
                    Badges and trophies
                </h2>
                <div class="bottom">
                    @if (UserHelper.UserBadges(userName).Count > 0)
                    {
                        foreach (var badge in UserHelper.UserBadges(userName))
                        {
                            if (badge.Badge.Graphic != null)
                            {
                                <img style="cursor: help" src="~/Graphics/Badges/@badge.Badge.Graphic" data-toggle="popover" data-trigger="focus" title="@badge.Badge.Name" data-content="@badge.Badge.Title, awarded on: @badge.CreationDate.ToShortDateString()" />
                            }
                            else
                            {
                                <p class="sidebar-badge" title="@badge.Badge.Title, awarded on: @badge.CreationDate.ToShortDateString()">@badge.Badge.Name</p>
                            }
                        }
                        if (userRegistrationDateTime < new DateTime(2015, 12, 31))
                        {
                            <img style="cursor: help" src="~/Graphics/Badges/alpha_user.png" data-toggle="popover" data-trigger="focus" title="Early adopter" data-content="Alpha tester, joined Voat during its alpha testing phase" />
                        }
                        // check voat cake day
                        if (userRegistrationDateTime.Date.Year < DateTime.Now.Date.Year)
                        {
                            if ((userRegistrationDateTime.Date.Day == DateTime.Now.Date.Day) && (userRegistrationDateTime.Date.Month == DateTime.Now.Date.Month))
                            {
                                <img style="cursor: help" src="~/Graphics/Badges/voat_cakeday.png" data-toggle="popover" data-trigger="focus" title="Voat Cake Day" data-content="This user is celebrating Voat Cake Day today!" />
                            }
                        }
                    }
                    else if (userRegistrationDateTime < new DateTime(2015, 12, 31))
                    {
                        <img style="cursor: help" src="~/Graphics/Badges/alpha_user.png" data-toggle="popover" data-trigger="focus" title="Early adopter" data-content="Alpha tester, joined Voat during its alpha testing phase" />
                    }
                    else
                    {
                        <p>This user currently has no badges.</p>
                    }
                </div>
            </div>
        </div>
        @Html.Action("SubversesUserModerates", "Home", new { userName = userName })

        @if (UserHelper.PublicSubscriptionsEnabled(userName))
        {
            @Html.Action("SubversesUserIsSubscribedTo", "Home", new { userName = userName })
        }
    </div>
}